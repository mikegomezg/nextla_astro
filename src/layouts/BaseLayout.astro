---
const { title, description } = Astro.props;
// Active link determination
const pathname = Astro.url.pathname;

// Check for mode (technical or narrative)
const url = new URL(Astro.request.url);
const mode = url.searchParams.get('mode') || (pathname.startsWith('/narrative/') ? 'narrative' : 'technical');

// Import the logo with fallback handling
let logomarkSrc;
try {
  // Try to import the SVG directly from public
  logomarkSrc = '/static/logo/nextla-logomark.svg';
} catch (error) {
  // Fallback to text only if image isn't found
  console.warn('Logo image not found, using fallback');
  logomarkSrc = '';
}

// Flag to check if image loads successfully
const hasLogo = logomarkSrc !== '';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{title} | Nextla</title>
    <meta name="description" content={description} />
    <link rel="icon" href="/static/favicons/favicon.svg" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;700&family=JetBrains+Mono&display=swap" />
  </head>
  <body class="bg-primary-900 text-neutral-100 font-body">
    <header class="bg-primary-800 text-white py-4">
      <div class="container mx-auto px-4">
        <div class="flex justify-between items-center">
          <div class="flex items-center">
            <div class="text-2xl font-heading font-bold mr-8">
              <a href="/" class="flex items-center">
                {hasLogo ? (
                  <img 
                    src={logomarkSrc} 
                    alt="Nextla Logo" 
                    width="32" 
                    height="32" 
                    class="mr-2"
                    onerror="this.style.display='none'"
                  />
                ) : (
                  <span class="w-8 h-8 bg-accent-500 rounded-full flex items-center justify-center mr-2">N</span>
                )}
                Nextla
              </a>
            </div>
            <nav>
              <ul class="flex space-x-6">
                <li><a href="/" class={`hover:text-accent-400 transition-colors ${pathname === '/' ? 'text-accent-500 font-medium' : ''}`}>Home</a></li>
                <li><a href="/about" class={`hover:text-accent-400 transition-colors ${pathname === '/about' ? 'text-accent-500 font-medium' : ''}`}>About</a></li>
              </ul>
            </nav>
          </div>
          
          <!-- Mode Switcher -->
          <div class="flex items-center ml-8">
            <button 
              class={`px-4 py-2 rounded-l-md ${mode === 'technical' ? 'bg-primary-700 text-white' : 'bg-primary-600 text-neutral-300'}`}
              id="technical-mode-btn"
            >
              Technical
            </button>
            <button 
              class={`px-4 py-2 rounded-r-md ${mode === 'narrative' ? 'bg-primary-700 text-white' : 'bg-primary-600 text-neutral-300'}`}
              id="narrative-mode-btn"
            >
              Narrative
            </button>
          </div>
          
          <div class="flex items-center space-x-4">
            <a href="#" class="text-white hover:text-accent-400 transition-colors">Download app</a>
            <a href="#" class="text-white hover:text-accent-400 transition-colors">Log in</a>
            <a href="#" class="bg-accent-500 text-white px-4 py-3 rounded hover:bg-accent-600 transition-colors transform hover:translate-y-[-2px] shadow-md">Try it free</a>
          </div>
        </div>
      </div>
    </header>
    
    <div class="flex">
      <!-- Sidebar Navigation with Toggle -->
      <aside id="sidebar" class="w-64 bg-primary-800 text-white h-screen transition-all duration-300 ease-in-out">
        <div class="flex justify-between items-center p-4 border-b border-primary-700">
          <h4 class="text-xs uppercase tracking-wider text-neutral-400">Navigation</h4>
          <button id="sidebar-toggle" class="p-1 rounded bg-primary-700 hover:bg-primary-600 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sidebar-icon">
              <path d="M19 12H5M12 19l-7-7 7-7"></path>
            </svg>
          </button>
        </div>
        <nav class="p-4">
          <!-- Common navigation -->
          <div class="mb-6">
            <h4 class="text-xs uppercase tracking-wider text-neutral-400 mb-2">Overview</h4>
            <ul class="space-y-2">
              <li><a href="/" class={`block p-2 ${pathname === '/' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Home</a></li>
              <li><a href="/about" class={`block p-2 ${pathname === '/about' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>About</a></li>
            </ul>
          </div>
          
          <!-- Technical navigation (conditionally visible) -->
          <div id="technical-nav" class={mode === 'technical' ? 'block' : 'hidden'}>
            <h4 class="text-xs uppercase tracking-wider text-neutral-400 mb-2">Technical</h4>
            <ul class="space-y-2">
              <li><a href="/technical/capabilities?mode=technical" class={`block p-2 ${pathname === '/technical/capabilities' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Capabilities</a></li>
              <li><a href="/technical/publishers?mode=technical" class={`block p-2 ${pathname === '/technical/publishers' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Publishers</a></li>
              <li><a href="/technical/entitlements?mode=technical" class={`block p-2 ${pathname === '/technical/entitlements' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Entitlements</a></li>
              <li><a href="/technical/reconciliation?mode=technical" class={`block p-2 ${pathname === '/technical/reconciliation' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Reconciliation</a></li>
            </ul>
          </div>
          
          <!-- Narrative navigation (conditionally visible) -->
          <div id="narrative-nav" class={mode === 'narrative' ? 'block' : 'hidden'}>
            <h4 class="text-xs uppercase tracking-wider text-neutral-400 mb-2">Narrative</h4>
            <ul class="space-y-2">
              <li><a href="/narrative/mirador?mode=narrative" class={`block p-2 ${pathname === '/narrative/mirador' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Mirador World</a></li>
              <li><a href="/narrative/city-states?mode=narrative" class={`block p-2 ${pathname === '/narrative/city-states' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>City-States</a></li>
              <li><a href="/narrative/silas?mode=narrative" class={`block p-2 ${pathname === '/narrative/silas' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Silas's Journey</a></li>
              <li><a href="/narrative/capabilities?mode=narrative" class={`block p-2 ${pathname === '/narrative/capabilities' ? 'bg-primary-700 text-accent-400 rounded' : 'hover:bg-primary-700 hover:text-accent-400 transition-colors'}`}>Capabilities</a></li>
            </ul>
          </div>
        </nav>
      </aside>
      
      <!-- Collapsed sidebar toggle button -->
      <div id="sidebar-collapsed" class="hidden bg-primary-800 text-white h-screen py-4 px-2 transition-all duration-300 ease-in-out">
        <button id="sidebar-expand" class="p-2 rounded bg-primary-700 hover:bg-primary-600 transition-colors mb-8">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M5 12h14M12 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
      
      <!-- Main Content -->
      <main class="flex-1">
        <slot />
      </main>
    </div>
    
    <footer class="bg-primary-900 text-neutral-100 py-8 border-t border-primary-700">
      <div class="container mx-auto px-4">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div>
            <h3 class="text-xl font-heading mb-4 text-secondary-400">Nextla</h3>
            <p>A modern approach to attention management in enterprise software.</p>
          </div>
          <div>
            <h3 class="text-xl font-heading mb-4 text-secondary-400">Navigation</h3>
            <ul class="space-y-2">
              <li><a href="/" class="hover:text-accent-400 transition-colors">Home</a></li>
              <li><a href="/about" class="hover:text-accent-400 transition-colors">About</a></li>
              <li><a href="/technical/capabilities?mode=technical" class="hover:text-accent-400 transition-colors">Documentation</a></li>
              <li><a href="/narrative/mirador?mode=narrative" class="hover:text-accent-400 transition-colors">Story</a></li>
            </ul>
          </div>
          <div>
            <h3 class="text-xl font-heading mb-4 text-secondary-400">Contact</h3>
            <p>info@nextla.net</p>
          </div>
        </div>
        <div class="border-t border-primary-700 mt-8 pt-8 text-center">
          <p>&copy; {new Date().getFullYear()} Nextla. All rights reserved.</p>
        </div>
      </div>
    </footer>
    
    <!-- Add client-side script for mode switching and sidebar toggling -->
    <script>
      // Mode switching functions
      document.getElementById('technical-mode-btn').addEventListener('click', () => {
        switchMode('technical');
      });
      
      document.getElementById('narrative-mode-btn').addEventListener('click', () => {
        switchMode('narrative');
      });
      
      function switchMode(mode) {
        // Update URL
        const url = new URL(window.location);
        url.searchParams.set('mode', mode);
        window.history.pushState({}, '', url);
        
        // Update UI
        document.getElementById('technical-nav').style.display = mode === 'technical' ? 'block' : 'none';
        document.getElementById('narrative-nav').style.display = mode === 'narrative' ? 'block' : 'none';
        
        // Update button styles
        document.getElementById('technical-mode-btn').className = `px-4 py-2 rounded-l-md ${mode === 'technical' ? 'bg-primary-700 text-white' : 'bg-primary-600 text-neutral-300'}`;
        document.getElementById('narrative-mode-btn').className = `px-4 py-2 rounded-r-md ${mode === 'narrative' ? 'bg-primary-700 text-white' : 'bg-primary-600 text-neutral-300'}`;
      }
      
      // Sidebar toggle functionality
      const sidebar = document.getElementById('sidebar');
      const sidebarCollapsed = document.getElementById('sidebar-collapsed');
      const sidebarToggle = document.getElementById('sidebar-toggle');
      const sidebarExpand = document.getElementById('sidebar-expand');
      
      sidebarToggle.addEventListener('click', () => {
        sidebar.classList.add('hidden');
        sidebarCollapsed.classList.remove('hidden');
      });
      
      sidebarExpand.addEventListener('click', () => {
        sidebar.classList.remove('hidden');
        sidebarCollapsed.classList.add('hidden');
      });
    </script>
  </body>
</html> 