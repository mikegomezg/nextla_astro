---
const { 
  variant = "primary", 
  href, 
  type, 
  classes = "", 
  disabled = false 
} = Astro.props;

// Generate variant-specific classes
const variantClasses = {
  primary: "bg-jade hover:bg-jade-dark text-white",
  secondary: "bg-transparent border border-white/30 hover:bg-white/10 text-white",
  accent: "bg-accent-600 hover:bg-accent-700 text-white",
  navy: "bg-primary-600 hover:bg-primary-700 text-white",
};

// Determine if it should be an anchor or button
const isLink = !!href;
const Element = isLink ? "a" : "button";

// Base classes for all variants
const baseClasses = "inline-block rounded-md px-6 py-3 font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-jade focus:ring-opacity-50";

// Combine all classes
const allClasses = `${baseClasses} ${variantClasses[variant]} ${classes}`;
---

{isLink ? (
  <Element href={href} class={allClasses}>
    <slot />
  </Element>
) : (
  <Element 
    type={type || "button"} 
    class={allClasses} 
    disabled={disabled}
  >
    <slot />
  </Element>
)} 