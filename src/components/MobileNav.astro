---
interface Props {
  variant?: 'minimal' | 'bottom' | 'floating';
}

const { variant = 'minimal' } = Astro.props;
---

{variant === 'minimal' && (
  <div class="mobile-nav-minimal">
    <header id="mobile-nav-minimal" class="fixed top-0 left-0 w-full z-50 px-4 py-3 bg-[#0A0C35]/80 backdrop-blur-md transition-colors duration-300">
      <div class="flex justify-between items-center">
        <div class="text-2xl font-heading font-bold">
          <a href="/" class="flex items-center">
            Mirador
          </a>
        </div>
        <button id="menu-toggle-minimal" class="p-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="3" y1="6" x2="21" y2="6"></line>
            <line x1="3" y1="18" x2="21" y2="18"></line>
          </svg>
        </button>
      </div>
    </header>

    <!-- Mobile Menu Overlay -->
    <div id="mobile-menu-minimal" class="fixed inset-0 bg-[#05061A] z-50 transform translate-x-full transition-transform duration-300 ease-in-out flex items-center justify-center">
      <button id="close-menu-minimal" class="absolute top-4 right-4 p-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
      <nav class="text-center">
        <ul class="space-y-6 text-2xl">
          <li><a href="#" class="hover:text-[#2E6E4E] transition-colors">Home</a></li>
          <li><a href="#" class="hover:text-[#2E6E4E] transition-colors">About</a></li>
          <li><a href="#" class="hover:text-[#2E6E4E] transition-colors">Technical Path</a></li>
          <li><a href="#" class="hover:text-[#2E6E4E] transition-colors">Narrative Path</a></li>
        </ul>
      </nav>
    </div>
  </div>
)}

{variant === 'bottom' && (
  <div class="mobile-nav-bottom">
    <nav id="bottom-nav" class="fixed bottom-0 left-0 w-full bg-[#0A0C35]/90 backdrop-blur-md border-t border-[#2E6E4E]/20 transform transition-transform duration-300 z-50">
      <ul class="flex justify-around py-3 px-4">
        <li>
          <a href="#" class="flex flex-col items-center group">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="group-hover:text-[#2E6E4E] transition-colors">
              <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
              <polyline points="9 22 9 12 15 12 15 22"></polyline>
            </svg>
            <span class="text-xs mt-1 group-hover:text-[#2E6E4E] transition-colors">Home</span>
          </a>
        </li>
        <li>
          <a href="#" class="flex flex-col items-center group">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="group-hover:text-[#2E6E4E] transition-colors">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="16" x2="12" y2="12"></line>
              <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
            <span class="text-xs mt-1 group-hover:text-[#2E6E4E] transition-colors">About</span>
          </a>
        </li>
        <li>
          <a href="#" class="flex flex-col items-center group">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="group-hover:text-[#2E6E4E] transition-colors">
              <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
              <line x1="8" y1="21" x2="16" y2="21"></line>
              <line x1="12" y1="17" x2="12" y2="21"></line>
            </svg>
            <span class="text-xs mt-1 group-hover:text-[#2E6E4E] transition-colors">Technical</span>
          </a>
        </li>
        <li>
          <a href="#" class="flex flex-col items-center group">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="group-hover:text-[#2E6E4E] transition-colors">
              <path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>
            </svg>
            <span class="text-xs mt-1 group-hover:text-[#2E6E4E] transition-colors">Narrative</span>
          </a>
        </li>
      </ul>
    </nav>
  </div>
)}

{variant === 'floating' && (
  <div class="mobile-nav-floating">
    <button id="floating-menu-btn" class="fixed bottom-6 right-6 z-50 w-14 h-14 rounded-full bg-[#2E6E4E] shadow-lg flex items-center justify-center hover:bg-[#A63D2F] transition-colors duration-300 transform hover:scale-110">
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="12" y1="3" x2="12" y2="21"></line>
      </svg>
    </button>
    
    <div id="floating-menu" class="fixed bottom-24 right-6 z-40 transform scale-0 opacity-0 origin-bottom-right transition-all duration-300 space-y-4 flex flex-col items-end">
      <a href="#" class="flex items-center bg-[#0A0C35] rounded-full pl-4 pr-2 py-2 shadow-lg hover:bg-[#2E6E4E] transition-colors">
        <span class="mr-2">Home</span>
        <div class="w-8 h-8 rounded-full bg-[#2E6E4E] flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
            <polyline points="9 22 9 12 15 12 15 22"></polyline>
          </svg>
        </div>
      </a>
      <a href="#" class="flex items-center bg-[#0A0C35] rounded-full pl-4 pr-2 py-2 shadow-lg hover:bg-[#2E6E4E] transition-colors">
        <span class="mr-2">About</span>
        <div class="w-8 h-8 rounded-full bg-[#2E6E4E] flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="16" x2="12" y2="12"></line>
            <line x1="12" y1="8" x2="12.01" y2="8"></line>
          </svg>
        </div>
      </a>
      <a href="#" class="flex items-center bg-[#0A0C35] rounded-full pl-4 pr-2 py-2 shadow-lg hover:bg-[#2E6E4E] transition-colors">
        <span class="mr-2">Technical</span>
        <div class="w-8 h-8 rounded-full bg-[#2E6E4E] flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
            <line x1="8" y1="21" x2="16" y2="21"></line>
            <line x1="12" y1="17" x2="12" y2="21"></line>
          </svg>
        </div>
      </a>
      <a href="#" class="flex items-center bg-[#0A0C35] rounded-full pl-4 pr-2 py-2 shadow-lg hover:bg-[#2E6E4E] transition-colors">
        <span class="mr-2">Narrative</span>
        <div class="w-8 h-8 rounded-full bg-[#2E6E4E] flex items-center justify-center">
          <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>
          </svg>
        </div>
      </a>
    </div>
  </div>
)}

<script>
  // For minimal variant
  const menuToggleMinimal = document.getElementById('menu-toggle-minimal');
  const closeMenuMinimal = document.getElementById('close-menu-minimal');
  const mobileMenuMinimal = document.getElementById('mobile-menu-minimal');
  
  if (menuToggleMinimal && closeMenuMinimal && mobileMenuMinimal) {
    menuToggleMinimal.addEventListener('click', () => {
      mobileMenuMinimal.classList.remove('translate-x-full');
    });
    
    closeMenuMinimal.addEventListener('click', () => {
      mobileMenuMinimal.classList.add('translate-x-full');
    });
    
    // Header background change on scroll
    window.addEventListener('scroll', () => {
      const header = document.getElementById('mobile-nav-minimal');
      if (header) {
        if (window.scrollY > 100) {
          header.classList.add('bg-[#0A0C35]');
          header.classList.remove('bg-[#0A0C35]/80');
        } else {
          header.classList.add('bg-[#0A0C35]/80');
          header.classList.remove('bg-[#0A0C35]');
        }
      }
    });
  }
  
  // For bottom variant
  const bottomNav = document.getElementById('bottom-nav');
  if (bottomNav) {
    let lastScrollTop = 0;
    window.addEventListener('scroll', () => {
      let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      if (scrollTop > lastScrollTop && scrollTop > 100) {
        // Scrolling down - hide nav
        bottomNav.style.transform = 'translateY(100%)';
      } else {
        // Scrolling up - show nav
        bottomNav.style.transform = 'translateY(0)';
      }
      lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
    });
  }
  
  // For floating variant
  const floatingMenuBtn = document.getElementById('floating-menu-btn');
  const floatingMenu = document.getElementById('floating-menu');
  
  if (floatingMenuBtn && floatingMenu) {
    let isOpen = false;
    
    floatingMenuBtn.addEventListener('click', () => {
      isOpen = !isOpen;
      if (isOpen) {
        floatingMenu.classList.remove('scale-0', 'opacity-0');
        floatingMenu.classList.add('scale-100', 'opacity-100');
        floatingMenuBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        `;
      } else {
        floatingMenu.classList.add('scale-0', 'opacity-0');
        floatingMenu.classList.remove('scale-100', 'opacity-100');
        floatingMenuBtn.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="3" y1="12" x2="21" y2="12"></line>
            <line x1="12" y1="3" x2="12" y2="21"></line>
          </svg>
        `;
      }
    });
  }
</script> 