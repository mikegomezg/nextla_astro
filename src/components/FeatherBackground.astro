---
// Number of feathers to display
const featherCount = 15;
---

<div class="absolute inset-0 overflow-hidden z-0" id="feather-container">
  {Array.from({ length: featherCount }).map((_, i) => (
    <div 
      class="absolute opacity-10 feather"
      style={{
        left: `${Math.random() * 100}%`,
        top: `${Math.random() * 100}%`,
        transform: `rotate(${Math.random() * 360}deg)`,
        zIndex: 1
      }}
    >
      <svg width="40" height="120" viewBox="0 0 40 120" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M20 0C20 40 40 60 40 80C40 100 30 120 20 120C10 120 0 100 0 80C0 60 20 40 20 0Z" fill={i % 2 === 0 ? '#3b866e' : '#B1624E'} />
      </svg>
    </div>
  ))}
</div>

<script>
  // Add parallax effect to feathers on scroll
  const feathers = document.querySelectorAll('.feather');
  let animationStarted = false;
  
  // Start animation after page load
  setTimeout(() => {
    animationStarted = true;
    feathers.forEach((feather, index) => {
      feather.classList.add('animate-feather');
    });
  }, 2000);
  
  // Add parallax effect on scroll
  window.addEventListener('scroll', () => {
    if (!animationStarted) return;
    
    const scrollPosition = window.scrollY;
    feathers.forEach((feather, index) => {
      const parallaxOffset = scrollPosition * 0.2 * (index % 3 + 1);
      feather.style.transform = `rotate(${Math.random() * 360}deg) translateY(${parallaxOffset}px)`;
    });
  });
</script>

<style>
  .feather {
    transition: transform 0.5s ease-out;
  }
  
  .animate-feather {
    animation: float 8s ease-in-out infinite;
    animation-delay: calc(var(--index) * 0.5s);
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0) rotate(0deg);
    }
    50% {
      transform: translateY(-15px) rotate(5deg);
    }
  }
</style> 