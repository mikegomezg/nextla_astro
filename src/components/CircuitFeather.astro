---
interface Props {
  severity?: 'minor' | 'moderate' | 'severe' | 'critical';
  size?: 'sm' | 'md' | 'lg';
  animated?: boolean;
  className?: string;
}

const { 
  severity = 'minor', 
  size = 'md', 
  animated = false,
  className = ''
} = Astro.props;

// Map severity to colors
const colorMap = {
  minor: {
    primary: '#A63D2F', // Accent color
    secondary: '#C24B3A',
    highlight: '#D6A6A0'
  },
  moderate: {
    primary: '#2E6E4E', // Secondary color
    secondary: '#37865F',
    highlight: '#9BC3B5'
  },
  severe: {
    primary: '#FFC107', // Alert color
    secondary: '#FFD54F',
    highlight: '#FFECB3'
  },
  critical: {
    primary: '#1A237E', // Primary with red accents
    secondary: '#2A34A4',
    highlight: '#A63D2F'
  }
};

// Map size to dimensions
const sizeMap = {
  sm: {
    width: 40,
    height: 60
  },
  md: {
    width: 60,
    height: 90
  },
  lg: {
    width: 80,
    height: 120
  }
};

const colors = colorMap[severity];
const dimensions = sizeMap[size];
---

<svg 
  xmlns="http://www.w3.org/2000/svg" 
  viewBox="0 0 100 150" 
  width={dimensions.width} 
  height={dimensions.height}
  class={`inline-block ${animated ? 'animate-float' : ''} ${className}`}
>
  <!-- Feather outline -->
  <path 
    d="M50,10 C60,20 80,40 90,70 C90,100 70,130 50,140 C30,130 10,100 10,70 C20,40 40,20 50,10" 
    stroke={colors.primary} 
    stroke-width="2" 
    fill="none"
  />
  
  <!-- Central shaft / circuit trace -->
  <path 
    d="M50,10 L50,140" 
    stroke={colors.secondary} 
    stroke-width="3"
  />
  
  <!-- Circuit barbs -->
  <g>
    <!-- Left side -->
    <path d="M50,30 L30,40" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,50 L25,65" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,70 L20,90" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,90 L25,105" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,110 L35,120" stroke={colors.secondary} stroke-width="1.5" />
    
    <!-- Right side -->
    <path d="M50,30 L70,40" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,50 L75,65" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,70 L80,90" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,90 L75,105" stroke={colors.secondary} stroke-width="1.5" />
    <path d="M50,110 L65,120" stroke={colors.secondary} stroke-width="1.5" />
  </g>
  
  <!-- Circuit nodes -->
  <circle cx="30" cy="40" r="2" fill={colors.highlight} />
  <circle cx="25" cy="65" r="2" fill={colors.highlight} />
  <circle cx="20" cy="90" r="2" fill={colors.highlight} />
  <circle cx="25" cy="105" r="2" fill={colors.highlight} />
  <circle cx="35" cy="120" r="2" fill={colors.highlight} />
  
  <circle cx="70" cy="40" r="2" fill={colors.highlight} />
  <circle cx="75" cy="65" r="2" fill={colors.highlight} />
  <circle cx="80" cy="90" r="2" fill={colors.highlight} />
  <circle cx="75" cy="105" r="2" fill={colors.highlight} />
  <circle cx="65" cy="120" r="2" fill={colors.highlight} />
  
  <!-- Connection point -->
  <circle cx="50" cy="10" r="3" fill={colors.primary} />
  
  <!-- Base transistor -->
  <rect x="45" y="135" width="10" height="5" fill={colors.primary} rx="1" />
</svg>

<style>
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
  
  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
</style> 