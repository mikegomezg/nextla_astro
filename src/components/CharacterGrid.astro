---
import { getEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

// Import character images in the correct order
import silas from "../assets/characters/1-silas.png";
import kate from "../assets/characters/2-cors.png";
import victoria from "../assets/characters/3-victoria.png";
import mercedes from "../assets/characters/4-mercedes.png";
import john from "../assets/characters/5-john.png";
import enrique from "../assets/characters/6-enrique.png";

interface Character {
  name: string;
  role: string;
  bio: string;
  image?: string;
}

const charactersContent = await getEntry("landing", "characters");

if (!charactersContent) {
  throw new Error("Characters content not found: characters entry missing from landing collection");
}

const { characters = [] } = charactersContent.data;

const orderedCharacterImages: ImageMetadata[] = [
  silas, kate, victoria, mercedes, john, enrique,
];

const bgColors = [
  "from-primary/30 to-secondary/30",
  "from-secondary/30 to-highlight/30",
  "from-highlight/30 to-accent/30",
  "from-accent/30 to-primary/30",
  "from-primary/30 to-highlight/30",
  "from-secondary/30 to-accent/30",
];
---

<section id="characters" aria-labelledby="characters-heading" class="py-16 px-6 bg-background">
  <div class="max-w-6xl mx-auto">
    <h2 id="characters-heading" class="mb-8 text-2xl md:text-3xl font-bold text-center text-secondary">
      Characters
    </h2>

    <!-- Desktop grid view -->
    <div class="hidden md:grid grid-cols-3 gap-6">
      {orderedCharacterImages.map((image, index) => (
        <div class="flex flex-col p-5 text-center bg-surface border border-secondary/20 rounded-lg shadow-md items-center hover:shadow-lg transition-shadow">
          <div class="w-40 h-40 mb-4 overflow-hidden rounded-full">
            {image ? (
              <Image
                src={image}
                alt={`${characters[index]?.name || `Character ${index+1}`} - ${characters[index]?.role || "Character"}`}
                width={160}
                height={160}
                class="object-cover w-full h-full"
                loading="eager"
              />
            ) : (
              <div class={`w-full h-full rounded-full bg-gradient-to-br ${bgColors[index % bgColors.length]} flex items-center justify-center`}>
                <span class="text-3xl font-bold text-text">
                  {(characters[index]?.name || "C").charAt(0)}
                </span>
              </div>
            )}
          </div>

          <h3 class="text-xl font-semibold text-highlight mb-1">
            {characters[index]?.name || `Character ${index+1}`}
          </h3>
          <p class="text-accent text-sm mb-3">
            {characters[index]?.role || "Character"}
          </p>
          <p class="text-text text-sm">
            {characters[index]?.bio || "Character description"}
          </p>
        </div>
      ))}
    </div>

    <!-- Mobile scroll view -->
    <div class="md:hidden overflow-x-auto pb-4 -mx-4 px-4">
      <div class="flex space-x-4" style="min-width: min-content">
        {orderedCharacterImages.map((image, index) => (
          <div class="flex flex-col p-4 text-center bg-surface border border-secondary/20 rounded-lg shadow-md items-center" style="min-width: 220px; max-width: 280px;">
            <div class="w-28 h-28 mb-3 overflow-hidden rounded-full">
              {image ? (
                <Image
                  src={image}
                  alt={`${characters[index]?.name || `Character ${index+1}`} - ${characters[index]?.role || "Character"}`}
                  width={112}
                  height={112}
                  class="object-cover w-full h-full"
                  loading="eager"
                />
              ) : (
                <div class={`w-full h-full rounded-full bg-gradient-to-br ${bgColors[index % bgColors.length]} flex items-center justify-center`}>
                  <span class="text-2xl font-bold text-text">
                    {(characters[index]?.name || "C").charAt(0)}
                  </span>
                </div>
              )}
            </div>
            <h3 class="text-lg font-semibold text-highlight mb-1">
              {characters[index]?.name || `Character ${index+1}`}
            </h3>
            <p class="text-accent text-xs mb-2">
              {characters[index]?.role || "Character"}
            </p>
            <p class="text-text text-xs line-clamp-3">
              {characters[index]?.bio || "Character description"}
            </p>
          </div>
        ))}
      </div>
    </div>

    <!-- Mobile navigation indicators -->
    <div class="flex justify-center space-x-2 mt-4 md:hidden">
      <span class="w-2 h-2 rounded-full bg-primary"></span>
      <span class="w-2 h-2 rounded-full bg-muted/20"></span>
      <span class="w-2 h-2 rounded-full bg-muted/20"></span>
    </div>

    <!-- See All Characters button -->
    <div class="text-center mt-8">
      <button class="px-6 py-2 text-text font-medium bg-secondary rounded-lg hover:bg-opacity-90 transition-colors">
        See All Characters
      </button>
    </div>
  </div>
</section>
