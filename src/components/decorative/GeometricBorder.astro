---
// src/components/decorative/GeometricBorder.astro
interface Props {
  type?: 'horizontal' | 'vertical' | 'corner';
  color?: 'accent' | 'secondary' | 'primary';
  className?: string;
}

const { 
  type = 'horizontal', 
  color = 'accent', 
  className = '' 
} = Astro.props;

const colorMap = {
  accent: 'bg-accent-500',
  secondary: 'bg-secondary-500',
  primary: 'bg-primary-500',
};

const borderColor = colorMap[color] || colorMap.accent;
---

{type === 'horizontal' && (
  <div class={`w-full h-2 ${borderColor} ${className}`}>
    <div class="relative w-full h-full">
      <div class="absolute left-1/4 top-0 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
      <div class="absolute left-2/4 top-0 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
      <div class="absolute left-3/4 top-0 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
    </div>
  </div>
)}

{type === 'vertical' && (
  <div class={`h-full w-2 ${borderColor} ${className}`}>
    <div class="relative w-full h-full">
      <div class="absolute left-0 top-1/4 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
      <div class="absolute left-0 top-2/4 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
      <div class="absolute left-0 top-3/4 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
    </div>
  </div>
)}

{type === 'corner' && (
  <div class={`w-12 h-12 relative ${className}`}>
    <div class={`absolute top-0 left-0 w-2 h-full ${borderColor}`}></div>
    <div class={`absolute top-0 left-0 w-full h-2 ${borderColor}`}></div>
    <div class="absolute top-4 left-4 w-2 h-2 transform rotate-45 bg-white opacity-70"></div>
  </div>
)}

<style>
  /* Add any specific styling here */
</style> 